/*
As of today, Shadertoy's API is open to all of you, 
let's get creative! Any developer can build apps (or webs) and access Shadertoys that have the right privacy settings ("Public + API").

Click here to access your Apps or via your Profile
// https://www.shadertoy.com/myapps

What Can You Access?
After you request your API Key, you will be able to access your (and others') beloved Shadertoys from any website/app.
This basically means that you can run queries on our database, and even download shaders to use them on your own software (check licenses).
If you can not see your shader listed in the API make sure the privacy of your shader is set to "Public + API",
be aware that when you do that other users will be able to access/use your shaders.

Coding: Simple, Very Simple
All API calls require a key that you can request (check the first section of this page) for free 
and returns JSON files that you can easily read with your favorite parser(문장의 구조 분석·오류 점검 프로그램).

// JSON(JavaScript Object Notation)
자바스크립트(JavaScript) 토대로 개발되었다. 
여러 프로그래밍 언어에도 사용할 수 있어 독립형 언어이며 텍스트로 기술하여 사람도 쉽게 읽고 작성할 수 있다. 
JSON은 자바스크립트(JavScript)의 구문 형식을 따르지만, 
C, C++, C#, 자바(Java), 파이선(Python) 등의 프로그램 언어와도 함께 사용되는 플랫폼과 프로그래밍 언어 면에서 독립적인 언어이다. 
웹 브라우저와 웹 서버 간 비동기 통신, 웹 서버 간의 데이터 교환 등에 주로 사용된다. 
속성-값 쌍( attribute–value pairs and array data types (or any other serializable value)) 또는 "키-값 쌍"으로 이루어진 
데이터 오브젝트를 전달하기 위해 인간이 읽을 수 있는 텍스트를 사용하는 개방형 표준 포맷이다. 
특히, 인터넷에서 자료를 주고 받을 때 그 자료를 표현하는 방법으로 알려져 있다.
자료의 종류에 큰 제한은 없으며, 특히 컴퓨터 프로그램의 변수값을 표현하는 데 적합하다. 
본래는 자바스크립트 언어로부터 파생되어 자바스크립트의 구문 형식을 따르지만 언어 독립형 데이터 포맷이다. 
즉, 프로그래밍 언어나 플랫폼에 독립적이므로, 구문 분석 및 JSON 데이터 생성을 위한 코드는 
C, C++, C#, 자바, 자바스크립트, 펄, 파이썬 등 수많은 프로그래밍 언어에서 쉽게 이용할 수 있다. 

JSON은 자바스크립트 스크립트 언어의 서브셋에 기반을 두었다. 
그리고 자바스크립트와 함께 흔히 사용되었으나 언어 독립적인 데이터 포맷이기도 했다.
JSOn 데이터의 구문 분석 및 생성을 위한 코드는 수많은 프로그래밍 언어에서 쉽게 볼 수 있다.
JSON의 웹사이트는 언어별로 JSON 라이브러리를 나열한다. 

서버에서 받아온 문자열 JSON 데이터를 사용하기 위해서는 네이티브 JSON 객체로 변환을 해야 한다. 
이 과정을 파싱(Parsing)이라고 한다.
반대로 네트워크로 데이터를 전송하기 위해서 객체를 문자열로 변환 하는 것을 Strngification(문자열화)라고 한다. 
서버에게 요청해서 받아온 json 포맷의 문자열을 자바스크립트에서 쉽게 활용할 수 있는 객체로 변환해서 
필요한 DOM 엘리먼트를 생성해서 데이터를 넣어서 페이지에 배치하는 과정을 거치면 된다.


Here are the basics of our API:

- Query shaders: as a developer you can pass any query to run on our database. This service will return an array of IDs.

- Get a shader from a shader ID.

- Access the assets.

- Get all shaders.

// https://github.com/beautypi
*/
